{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///external \"ReactRedux\"","webpack:///./src/types.ts","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/store.ts","webpack:///external \"Redux\"","webpack:///./node_modules/redux-thunk/es/index.js","webpack:///./src/App.tsx","webpack:///../src/index.tsx","webpack:///./src/actions.ts","webpack:///./src/Table.tsx","webpack:///./node_modules/react-table/index.js","webpack:///../src/publicUtils.js","webpack:///../src/utils.js","webpack:///../src/makeDefaultPluginHooks.js","webpack:///../src/hooks/useColumnVisibility.js","webpack:///../src/hooks/useTable.js","webpack:///../src/plugin-hooks/useExpanded.js","webpack:///../src/filterTypes.js","webpack:///../src/plugin-hooks/useFilters.js","webpack:///../src/plugin-hooks/useGlobalFilter.js","webpack:///../src/aggregations.js","webpack:///../src/plugin-hooks/useGroupBy.js","webpack:///../src/sortTypes.js","webpack:///../src/plugin-hooks/useSortBy.js","webpack:///../src/plugin-hooks/usePagination.js","webpack:///../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","webpack:///../src/plugin-hooks/useRowSelect.js","webpack:///../src/plugin-hooks/useRowState.js","webpack:///../src/plugin-hooks/useColumnOrder.js","webpack:///../src/plugin-hooks/useResizeColumns.js","webpack:///../src/plugin-hooks/useAbsoluteLayout.js","webpack:///../src/plugin-hooks/useBlockLayout.js","webpack:///../src/plugin-hooks/useFlexLayout.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","ReactRedux","Actions","ReactDOM","render","Provider","store","delay","document","getElementById","initTableState","isLoaded","isLoading","stash","user","undefined","items","data","createStore","combineReducers","table","state","action","type","LOAD","SUCCESS","isLoadInStash","payload","STASH","applyMiddleware","Redux","createThunkMiddleware","extraArgument","_ref","dispatch","getState","next","thunk","withExtraArgument","columns","Header","accessor","selectIsLoaded","selectIsLoading","selectUser","selectItems","useDispatch","useSelector","useEffect","init","className","onLapInteraction","lap","isFinish","reloadAfterDelay","timeInSeconds","totalLaps","isRefresh","actualLap","setActualLap","updateLapsData","finish","React.createElement","version","viewBox","cx","cy","style","animation","onAnimationEnd","onAnimationIterationCapture","fetchData","users","Math","random","length","getRandomGithubUser","url","fetch","then","result","ok","Error","json","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","row","getRowProps","cells","cell","getCellProps","actions","defaultRenderer","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","useLayoutEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","Comp","console","info","flexRender","component","proto","getPrototypeOf","isReactComponent","$$typeof","includes","description","linkColumnStructure","parent","depth","assignColumnAccessor","flattenColumns","flattenBy","id","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","flattenDeep","arr","newArr","push","String","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","scanColumns","uid","getUID","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","flat","recurse","expandRows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","getFooterGroupProps","getFooterProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","previousState","initialState","columnId","subHeader","handleColumn","parentVisible","subColumn","flatHeaders","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","header","subHeaders","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","min","max","canResize","accessRowsForColumn","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","g","col","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","aggregateFn","aggregate","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","_row$subRows","resKey","reSplitAlphaNumeric","compareBasic","getRowValueByColumnID","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","uniqueValue","columnGroup","PivotHeader","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","_oldRowState$cellStat","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","flex","totalColumnsMinWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","footerGroups"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = React;","module.exports = ReactRedux;","export type TTableState = {\r\n  isLoaded: boolean\r\n  isLoading: boolean\r\n  stash: {\r\n    user: string\r\n    items: any[]\r\n  }\r\n  data: {\r\n    user: string\r\n    items: any[]\r\n  }\r\n}\r\n\r\nexport interface IState {\r\n  table: TTableState\r\n}\r\n\r\ninterface IInitAction {\r\n  type: typeof Actions.INIT\r\n}\r\n\r\ninterface IFetchAction {\r\n  type: typeof Actions.LOAD\r\n}\r\n\r\ninterface ISuccessAction {\r\n  type: typeof Actions.SUCCESS\r\n  payload: {\r\n    user: string\r\n    items: []\r\n    isLoadInStash: boolean\r\n  }\r\n}\r\ninterface IStashAction {\r\n  type: typeof Actions.STASH\r\n}\r\n\r\nexport enum Actions {\r\n  INIT,\r\n  LOAD,\r\n  SUCCESS,\r\n  STASH,\r\n}\r\n\r\nexport type ActionTypes =\r\n  | IInitAction\r\n  | IFetchAction\r\n  | ISuccessAction\r\n  | IStashAction\r\n","import * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport store from './store'\r\nimport App from './App'\r\n\r\nconst delay = 10\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App delay={delay} />\r\n  </Provider>,\r\n  document.getElementById(`app`)\r\n)\r\n","module.exports = ReactDOM;","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { Actions, ActionTypes, TTableState } from './types'\r\n\r\nconst initTableState: TTableState = {\r\n  isLoaded: false,\r\n  isLoading: false,\r\n  stash: {\r\n    user: undefined,\r\n    items: [],\r\n  },\r\n  data: {\r\n    user: undefined,\r\n    items: [],\r\n  },\r\n}\r\n\r\nconst table = (state: TTableState = initTableState, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case Actions.LOAD: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      }\r\n    }\r\n    case Actions.SUCCESS: {\r\n      const { user, items, isLoadInStash } = action.payload\r\n\r\n      return {\r\n        ...state,\r\n        [isLoadInStash ? `stash` : `data`]: {\r\n          items: [...items],\r\n          user,\r\n        },\r\n        isLoaded: true,\r\n        isLoading: false,\r\n      }\r\n    }\r\n    case Actions.STASH: {\r\n      return {\r\n        ...state,\r\n        data: {\r\n          user: state.stash.user,\r\n          items: [...state.stash.items],\r\n        },\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    table,\r\n  }),\r\n  applyMiddleware(thunk)\r\n)\r\n\r\nexport default store\r\n","module.exports = Redux;","function createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\nexport default thunk;","import * as React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ReactSpinnerTimer from 'react-spinner-timer'\r\n\r\nimport { init, reloadAfterDelay } from './actions'\r\nimport Table from './Table'\r\nimport { IState } from './types'\r\n\r\nconst columns = [\r\n  { Header: `Название`, accessor: `name` },\r\n  { Header: `Описание`, accessor: `description` },\r\n  { Header: `Язык`, accessor: `language` },\r\n  { Header: `Размер`, accessor: `size` },\r\n]\r\nconst selectIsLoaded = (state: IState) => state.table.isLoaded\r\nconst selectIsLoading = (state: IState) => state.table.isLoading\r\nconst selectUser = (state: IState) => state.table.data.user\r\nconst selectItems = (state: IState) => state.table.data.items\r\n\r\nconst App: React.FC<{ delay: number }> = ({ delay }) => {\r\n  const dispatch = useDispatch()\r\n  const isLoaded = useSelector(selectIsLoaded)\r\n  const isLoading = useSelector(selectIsLoading)\r\n  const user = useSelector(selectUser)\r\n  const data = useSelector(selectItems)\r\n  const handleOnLapInteraction = (lap: any) => {\r\n    if (lap.isFinish) {\r\n      dispatch(reloadAfterDelay())\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    dispatch(init())\r\n  }, [])\r\n\r\n  if (!isLoaded) {\r\n      return <h1>Идет загрузка данных...</h1>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Example of table view component</h1>\r\n      <p>\r\n        Current user: <b>{user}</b>\r\n      </p>\r\n      <div className=\"spinner\">\r\n        <ReactSpinnerTimer\r\n          onLapInteraction={handleOnLapInteraction}\r\n          timeInSeconds={delay}\r\n          totalLaps={1}\r\n          isRefresh={isLoading}\r\n        />\r\n      </div>\r\n      <Table columns={columns} data={data} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import * as React from \"react\";\nimport \"./index.scss\";\n\nexport interface IProps {\n  timeInSeconds: number;\n  totalLaps: number;\n  isRefresh?: boolean;\n  onLapInteraction: Function;\n}\n\n/**\n * Component that counts the cycle of time\n * @param props.timeInSeconds lap time in seconds\n * @param props.totalLaps number of laps\n * @returns props.onLapInteraction function with data return for each lap\n */\n\nconst ReactSpinnerTimer: React.FC<IProps> = ({\n  timeInSeconds,\n  totalLaps,\n  onLapInteraction,\n  isRefresh,\n}) => {\n  const [actualLap, setActualLap] = React.useState(1);\n\n  // const actualLap = 1;\n\n  const updateLapsData = (finish: boolean) => {\n    onLapInteraction({\n      actualLap,\n      totalLaps: totalLaps,\n      isFinish: finish,\n      timeInSeconds: timeInSeconds,\n    });\n  };\n\n  const handleFinish = () => {\n    updateLapsData(true);\n  };\n\n  const handleUpdate = () => {\n    updateLapsData(false);\n    setActualLap(actualLap + 1);\n  };\n\n  if (isRefresh) return <div></div>;\n\n  return (\n    <div>\n      <svg version=\"1.1\" className=\"base\" viewBox=\"0 0 50 50\">\n        <circle className=\"path background\" cx=\"25\" cy=\"25\" r=\"20\" />\n        <circle\n          className=\"path\"\n          cx=\"25\"\n          cy=\"25\"\n          r=\"20\"\n          style={{\n            animation: `dash ${timeInSeconds}s linear ${totalLaps}`,\n          }}\n          onAnimationEnd={handleFinish}\n          onAnimationIterationCapture={handleUpdate}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default ReactSpinnerTimer;\n","import { ActionCreator } from 'redux'\r\nimport { ThunkAction } from 'redux-thunk'\r\n\r\nimport { IState, ActionTypes, Actions } from './types'\r\n\r\ntype ThunkResult<T> = ThunkAction<T, IState, undefined, ActionTypes>\r\n\r\nconst getRandomGithubUser = (): string => {\r\n  const users = [`facebook`, `google`, `yandex`, `microsoft`, `apple`, `airbnb`]\r\n\r\n  return users[(Math.random() * users.length) | 0]\r\n}\r\n\r\nexport const init: ActionCreator<ThunkResult<void>> = () => {\r\n  return async function(dispatch) {\r\n    // first load\r\n    await dispatch(fetchData())\r\n    // load in stash\r\n    dispatch(fetchData(true))\r\n  }\r\n}\r\n\r\nexport const reloadAfterDelay: ActionCreator<ThunkResult<void>> = () => {\r\n  return function(dispatch) {\r\n    // replace data from stash\r\n    dispatch({ type: Actions.STASH })\r\n    // load in stash\r\n    dispatch(fetchData(true))\r\n  }\r\n}\r\n\r\nexport const fetchData: ActionCreator<ThunkResult<\r\n  Promise<ActionTypes | void>\r\n>> = (isLoadInStash: boolean = false) => {\r\n  return async function(dispatch, getState) {\r\n    const {\r\n      table: { isLoading },\r\n    } = getState()\r\n    const user = getRandomGithubUser()\r\n    const url = `https://api.github.com/users/${user}/repos?per_page=100`\r\n\r\n    if (isLoading) {\r\n      return\r\n    }\r\n\r\n    dispatch({ type: Actions.LOAD })\r\n\r\n    const items = await fetch(url).then(result => {\r\n      if (!result.ok) {\r\n        throw new Error(`fetch error!`)\r\n      }\r\n\r\n      return result.json()\r\n    })\r\n\r\n    return dispatch({\r\n      type: Actions.SUCCESS,\r\n      payload: { user, items, isLoadInStash },\r\n    })\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport { useTable, Column } from 'react-table'\r\n\r\nconst Table: React.FC<{ columns: Column<any>[]; data: any[] }> = ({\r\n  columns,\r\n  data,\r\n}) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  })\r\n\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map((headerGroup, i) => (\r\n          <tr key={i} {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row)\r\n\r\n          return (\r\n            <tr key={i} {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              })}\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(originalRow, rowIndex, row)\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Get the columnValues to aggregate\n        const groupedValues = groupedRows.map(row => row.values[column.id])\n\n        // Get the columnValues to aggregate\n        const leafValues = leafRows.map(row => {\n          let columnValue = row.values[column.id]\n\n          if (!depth && column.aggregateValue) {\n            const aggregateValueFn =\n              typeof column.aggregateValue === 'function'\n                ? column.aggregateValue\n                : userAggregations[column.aggregateValue] ||\n                  aggregations[column.aggregateValue]\n\n            if (!aggregateValueFn) {\n              console.info({ column })\n              throw new Error(\n                `React Table: Invalid column.aggregateValue option for column listed above`\n              )\n            }\n\n            columnValue = aggregateValueFn(columnValue, row, column)\n          }\n          return columnValue\n        })\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows) {\n          return\n        } else if (row.subRows.length === 1) {\n          sortedFlatRows.push(row.subRows[0])\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex <= pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n\n    // Join the ids of deep rows\n    // to make a key, then manage all of the keys\n    // in a flat object\n    const row = rowsById[id]\n    const isSelected = row.isSelected\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = originalRow => ({})\nconst defaultInitialCellStateAccessor = originalRow => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row.original) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row.original)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(row.original)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'ew-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n"],"sourceRoot":""}